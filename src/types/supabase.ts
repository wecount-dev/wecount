/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/Category": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Category.id"];
          color?: parameters["rowFilter.Category.color"];
          name?: parameters["rowFilter.Category.name"];
          iconUrl?: parameters["rowFilter.Category.iconUrl"];
          description?: parameters["rowFilter.Category.description"];
          createdAt?: parameters["rowFilter.Category.createdAt"];
          updatedAt?: parameters["rowFilter.Category.updatedAt"];
          communityId?: parameters["rowFilter.Category.communityId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Category"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Category */
          Category?: definitions["Category"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Category.id"];
          color?: parameters["rowFilter.Category.color"];
          name?: parameters["rowFilter.Category.name"];
          iconUrl?: parameters["rowFilter.Category.iconUrl"];
          description?: parameters["rowFilter.Category.description"];
          createdAt?: parameters["rowFilter.Category.createdAt"];
          updatedAt?: parameters["rowFilter.Category.updatedAt"];
          communityId?: parameters["rowFilter.Category.communityId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Category.id"];
          color?: parameters["rowFilter.Category.color"];
          name?: parameters["rowFilter.Category.name"];
          iconUrl?: parameters["rowFilter.Category.iconUrl"];
          description?: parameters["rowFilter.Category.description"];
          createdAt?: parameters["rowFilter.Category.createdAt"];
          updatedAt?: parameters["rowFilter.Category.updatedAt"];
          communityId?: parameters["rowFilter.Category.communityId"];
        };
        body: {
          /** Category */
          Category?: definitions["Category"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Community": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Community.id"];
          isPublic?: parameters["rowFilter.Community.isPublic"];
          name?: parameters["rowFilter.Community.name"];
          description?: parameters["rowFilter.Community.description"];
          currency?: parameters["rowFilter.Community.currency"];
          color?: parameters["rowFilter.Community.color"];
          createdAt?: parameters["rowFilter.Community.createdAt"];
          updatedAt?: parameters["rowFilter.Community.updatedAt"];
          deletedAt?: parameters["rowFilter.Community.deletedAt"];
          imageURL?: parameters["rowFilter.Community.imageURL"];
          thumbURL?: parameters["rowFilter.Community.thumbURL"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Community"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Community */
          Community?: definitions["Community"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Community.id"];
          isPublic?: parameters["rowFilter.Community.isPublic"];
          name?: parameters["rowFilter.Community.name"];
          description?: parameters["rowFilter.Community.description"];
          currency?: parameters["rowFilter.Community.currency"];
          color?: parameters["rowFilter.Community.color"];
          createdAt?: parameters["rowFilter.Community.createdAt"];
          updatedAt?: parameters["rowFilter.Community.updatedAt"];
          deletedAt?: parameters["rowFilter.Community.deletedAt"];
          imageURL?: parameters["rowFilter.Community.imageURL"];
          thumbURL?: parameters["rowFilter.Community.thumbURL"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Community.id"];
          isPublic?: parameters["rowFilter.Community.isPublic"];
          name?: parameters["rowFilter.Community.name"];
          description?: parameters["rowFilter.Community.description"];
          currency?: parameters["rowFilter.Community.currency"];
          color?: parameters["rowFilter.Community.color"];
          createdAt?: parameters["rowFilter.Community.createdAt"];
          updatedAt?: parameters["rowFilter.Community.updatedAt"];
          deletedAt?: parameters["rowFilter.Community.deletedAt"];
          imageURL?: parameters["rowFilter.Community.imageURL"];
          thumbURL?: parameters["rowFilter.Community.thumbURL"];
        };
        body: {
          /** Community */
          Community?: definitions["Community"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/CreditCard": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.CreditCard.id"];
          cardNumber?: parameters["rowFilter.CreditCard.cardNumber"];
          validDateMonth?: parameters["rowFilter.CreditCard.validDateMonth"];
          validDateYear?: parameters["rowFilter.CreditCard.validDateYear"];
          twoLetterPassword?: parameters["rowFilter.CreditCard.twoLetterPassword"];
          registrationNumber?: parameters["rowFilter.CreditCard.registrationNumber"];
          description?: parameters["rowFilter.CreditCard.description"];
          cvv?: parameters["rowFilter.CreditCard.cvv"];
          cardType?: parameters["rowFilter.CreditCard.cardType"];
          createdAt?: parameters["rowFilter.CreditCard.createdAt"];
          updatedAt?: parameters["rowFilter.CreditCard.updatedAt"];
          deletedAt?: parameters["rowFilter.CreditCard.deletedAt"];
          communityId?: parameters["rowFilter.CreditCard.communityId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["CreditCard"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** CreditCard */
          CreditCard?: definitions["CreditCard"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.CreditCard.id"];
          cardNumber?: parameters["rowFilter.CreditCard.cardNumber"];
          validDateMonth?: parameters["rowFilter.CreditCard.validDateMonth"];
          validDateYear?: parameters["rowFilter.CreditCard.validDateYear"];
          twoLetterPassword?: parameters["rowFilter.CreditCard.twoLetterPassword"];
          registrationNumber?: parameters["rowFilter.CreditCard.registrationNumber"];
          description?: parameters["rowFilter.CreditCard.description"];
          cvv?: parameters["rowFilter.CreditCard.cvv"];
          cardType?: parameters["rowFilter.CreditCard.cardType"];
          createdAt?: parameters["rowFilter.CreditCard.createdAt"];
          updatedAt?: parameters["rowFilter.CreditCard.updatedAt"];
          deletedAt?: parameters["rowFilter.CreditCard.deletedAt"];
          communityId?: parameters["rowFilter.CreditCard.communityId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.CreditCard.id"];
          cardNumber?: parameters["rowFilter.CreditCard.cardNumber"];
          validDateMonth?: parameters["rowFilter.CreditCard.validDateMonth"];
          validDateYear?: parameters["rowFilter.CreditCard.validDateYear"];
          twoLetterPassword?: parameters["rowFilter.CreditCard.twoLetterPassword"];
          registrationNumber?: parameters["rowFilter.CreditCard.registrationNumber"];
          description?: parameters["rowFilter.CreditCard.description"];
          cvv?: parameters["rowFilter.CreditCard.cvv"];
          cardType?: parameters["rowFilter.CreditCard.cardType"];
          createdAt?: parameters["rowFilter.CreditCard.createdAt"];
          updatedAt?: parameters["rowFilter.CreditCard.updatedAt"];
          deletedAt?: parameters["rowFilter.CreditCard.deletedAt"];
          communityId?: parameters["rowFilter.CreditCard.communityId"];
        };
        body: {
          /** CreditCard */
          CreditCard?: definitions["CreditCard"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Deposit": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Deposit.id"];
          depositType?: parameters["rowFilter.Deposit.depositType"];
          paymentType?: parameters["rowFilter.Deposit.paymentType"];
          title?: parameters["rowFilter.Deposit.title"];
          description?: parameters["rowFilter.Deposit.description"];
          price?: parameters["rowFilter.Deposit.price"];
          localizedPrice?: parameters["rowFilter.Deposit.localizedPrice"];
          currency?: parameters["rowFilter.Deposit.currency"];
          subscriptionPeriodUnit?: parameters["rowFilter.Deposit.subscriptionPeriodUnit"];
          subscriptionPeriod?: parameters["rowFilter.Deposit.subscriptionPeriod"];
          createdAt?: parameters["rowFilter.Deposit.createdAt"];
          updatedAt?: parameters["rowFilter.Deposit.updatedAt"];
          deletedAt?: parameters["rowFilter.Deposit.deletedAt"];
          userId?: parameters["rowFilter.Deposit.userId"];
          communityId?: parameters["rowFilter.Deposit.communityId"];
          topicId?: parameters["rowFilter.Deposit.topicId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Deposit"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Deposit */
          Deposit?: definitions["Deposit"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Deposit.id"];
          depositType?: parameters["rowFilter.Deposit.depositType"];
          paymentType?: parameters["rowFilter.Deposit.paymentType"];
          title?: parameters["rowFilter.Deposit.title"];
          description?: parameters["rowFilter.Deposit.description"];
          price?: parameters["rowFilter.Deposit.price"];
          localizedPrice?: parameters["rowFilter.Deposit.localizedPrice"];
          currency?: parameters["rowFilter.Deposit.currency"];
          subscriptionPeriodUnit?: parameters["rowFilter.Deposit.subscriptionPeriodUnit"];
          subscriptionPeriod?: parameters["rowFilter.Deposit.subscriptionPeriod"];
          createdAt?: parameters["rowFilter.Deposit.createdAt"];
          updatedAt?: parameters["rowFilter.Deposit.updatedAt"];
          deletedAt?: parameters["rowFilter.Deposit.deletedAt"];
          userId?: parameters["rowFilter.Deposit.userId"];
          communityId?: parameters["rowFilter.Deposit.communityId"];
          topicId?: parameters["rowFilter.Deposit.topicId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Deposit.id"];
          depositType?: parameters["rowFilter.Deposit.depositType"];
          paymentType?: parameters["rowFilter.Deposit.paymentType"];
          title?: parameters["rowFilter.Deposit.title"];
          description?: parameters["rowFilter.Deposit.description"];
          price?: parameters["rowFilter.Deposit.price"];
          localizedPrice?: parameters["rowFilter.Deposit.localizedPrice"];
          currency?: parameters["rowFilter.Deposit.currency"];
          subscriptionPeriodUnit?: parameters["rowFilter.Deposit.subscriptionPeriodUnit"];
          subscriptionPeriod?: parameters["rowFilter.Deposit.subscriptionPeriod"];
          createdAt?: parameters["rowFilter.Deposit.createdAt"];
          updatedAt?: parameters["rowFilter.Deposit.updatedAt"];
          deletedAt?: parameters["rowFilter.Deposit.deletedAt"];
          userId?: parameters["rowFilter.Deposit.userId"];
          communityId?: parameters["rowFilter.Deposit.communityId"];
          topicId?: parameters["rowFilter.Deposit.topicId"];
        };
        body: {
          /** Deposit */
          Deposit?: definitions["Deposit"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Feed": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Feed.id"];
          isPublic?: parameters["rowFilter.Feed.isPublic"];
          title?: parameters["rowFilter.Feed.title"];
          date?: parameters["rowFilter.Feed.date"];
          price?: parameters["rowFilter.Feed.price"];
          localizedPrice?: parameters["rowFilter.Feed.localizedPrice"];
          latitude?: parameters["rowFilter.Feed.latitude"];
          longitude?: parameters["rowFilter.Feed.longitude"];
          createdAt?: parameters["rowFilter.Feed.createdAt"];
          updatedAt?: parameters["rowFilter.Feed.updatedAt"];
          deletedAt?: parameters["rowFilter.Feed.deletedAt"];
          communityId?: parameters["rowFilter.Feed.communityId"];
          userId?: parameters["rowFilter.Feed.userId"];
          creditCardId?: parameters["rowFilter.Feed.creditCardId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Feed"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Feed */
          Feed?: definitions["Feed"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Feed.id"];
          isPublic?: parameters["rowFilter.Feed.isPublic"];
          title?: parameters["rowFilter.Feed.title"];
          date?: parameters["rowFilter.Feed.date"];
          price?: parameters["rowFilter.Feed.price"];
          localizedPrice?: parameters["rowFilter.Feed.localizedPrice"];
          latitude?: parameters["rowFilter.Feed.latitude"];
          longitude?: parameters["rowFilter.Feed.longitude"];
          createdAt?: parameters["rowFilter.Feed.createdAt"];
          updatedAt?: parameters["rowFilter.Feed.updatedAt"];
          deletedAt?: parameters["rowFilter.Feed.deletedAt"];
          communityId?: parameters["rowFilter.Feed.communityId"];
          userId?: parameters["rowFilter.Feed.userId"];
          creditCardId?: parameters["rowFilter.Feed.creditCardId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Feed.id"];
          isPublic?: parameters["rowFilter.Feed.isPublic"];
          title?: parameters["rowFilter.Feed.title"];
          date?: parameters["rowFilter.Feed.date"];
          price?: parameters["rowFilter.Feed.price"];
          localizedPrice?: parameters["rowFilter.Feed.localizedPrice"];
          latitude?: parameters["rowFilter.Feed.latitude"];
          longitude?: parameters["rowFilter.Feed.longitude"];
          createdAt?: parameters["rowFilter.Feed.createdAt"];
          updatedAt?: parameters["rowFilter.Feed.updatedAt"];
          deletedAt?: parameters["rowFilter.Feed.deletedAt"];
          communityId?: parameters["rowFilter.Feed.communityId"];
          userId?: parameters["rowFilter.Feed.userId"];
          creditCardId?: parameters["rowFilter.Feed.creditCardId"];
        };
        body: {
          /** Feed */
          Feed?: definitions["Feed"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Image": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Image.id"];
          url?: parameters["rowFilter.Image.url"];
          communityId?: parameters["rowFilter.Image.communityId"];
          userId?: parameters["rowFilter.Image.userId"];
          feedId?: parameters["rowFilter.Image.feedId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Image"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Image */
          Image?: definitions["Image"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Image.id"];
          url?: parameters["rowFilter.Image.url"];
          communityId?: parameters["rowFilter.Image.communityId"];
          userId?: parameters["rowFilter.Image.userId"];
          feedId?: parameters["rowFilter.Image.feedId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Image.id"];
          url?: parameters["rowFilter.Image.url"];
          communityId?: parameters["rowFilter.Image.communityId"];
          userId?: parameters["rowFilter.Image.userId"];
          feedId?: parameters["rowFilter.Image.feedId"];
        };
        body: {
          /** Image */
          Image?: definitions["Image"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Permission": {
    get: {
      parameters: {
        query: {
          type?: parameters["rowFilter.Permission.type"];
          accepted?: parameters["rowFilter.Permission.accepted"];
          createdAt?: parameters["rowFilter.Permission.createdAt"];
          userId?: parameters["rowFilter.Permission.userId"];
          communityId?: parameters["rowFilter.Permission.communityId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Permission"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Permission */
          Permission?: definitions["Permission"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          type?: parameters["rowFilter.Permission.type"];
          accepted?: parameters["rowFilter.Permission.accepted"];
          createdAt?: parameters["rowFilter.Permission.createdAt"];
          userId?: parameters["rowFilter.Permission.userId"];
          communityId?: parameters["rowFilter.Permission.communityId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          type?: parameters["rowFilter.Permission.type"];
          accepted?: parameters["rowFilter.Permission.accepted"];
          createdAt?: parameters["rowFilter.Permission.createdAt"];
          userId?: parameters["rowFilter.Permission.userId"];
          communityId?: parameters["rowFilter.Permission.communityId"];
        };
        body: {
          /** Permission */
          Permission?: definitions["Permission"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Reaction": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Reaction.id"];
          emoji?: parameters["rowFilter.Reaction.emoji"];
          feedId?: parameters["rowFilter.Reaction.feedId"];
          replyId?: parameters["rowFilter.Reaction.replyId"];
          userId?: parameters["rowFilter.Reaction.userId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Reaction"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Reaction */
          Reaction?: definitions["Reaction"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Reaction.id"];
          emoji?: parameters["rowFilter.Reaction.emoji"];
          feedId?: parameters["rowFilter.Reaction.feedId"];
          replyId?: parameters["rowFilter.Reaction.replyId"];
          userId?: parameters["rowFilter.Reaction.userId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Reaction.id"];
          emoji?: parameters["rowFilter.Reaction.emoji"];
          feedId?: parameters["rowFilter.Reaction.feedId"];
          replyId?: parameters["rowFilter.Reaction.replyId"];
          userId?: parameters["rowFilter.Reaction.userId"];
        };
        body: {
          /** Reaction */
          Reaction?: definitions["Reaction"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Reply": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Reply.id"];
          messageType?: parameters["rowFilter.Reply.messageType"];
          photoURL?: parameters["rowFilter.Reply.photoURL"];
          movieURL?: parameters["rowFilter.Reply.movieURL"];
          fileURL?: parameters["rowFilter.Reply.fileURL"];
          text?: parameters["rowFilter.Reply.text"];
          createdAt?: parameters["rowFilter.Reply.createdAt"];
          updatedAt?: parameters["rowFilter.Reply.updatedAt"];
          communityId?: parameters["rowFilter.Reply.communityId"];
          feedId?: parameters["rowFilter.Reply.feedId"];
          userId?: parameters["rowFilter.Reply.userId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Reply"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Reply */
          Reply?: definitions["Reply"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Reply.id"];
          messageType?: parameters["rowFilter.Reply.messageType"];
          photoURL?: parameters["rowFilter.Reply.photoURL"];
          movieURL?: parameters["rowFilter.Reply.movieURL"];
          fileURL?: parameters["rowFilter.Reply.fileURL"];
          text?: parameters["rowFilter.Reply.text"];
          createdAt?: parameters["rowFilter.Reply.createdAt"];
          updatedAt?: parameters["rowFilter.Reply.updatedAt"];
          communityId?: parameters["rowFilter.Reply.communityId"];
          feedId?: parameters["rowFilter.Reply.feedId"];
          userId?: parameters["rowFilter.Reply.userId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Reply.id"];
          messageType?: parameters["rowFilter.Reply.messageType"];
          photoURL?: parameters["rowFilter.Reply.photoURL"];
          movieURL?: parameters["rowFilter.Reply.movieURL"];
          fileURL?: parameters["rowFilter.Reply.fileURL"];
          text?: parameters["rowFilter.Reply.text"];
          createdAt?: parameters["rowFilter.Reply.createdAt"];
          updatedAt?: parameters["rowFilter.Reply.updatedAt"];
          communityId?: parameters["rowFilter.Reply.communityId"];
          feedId?: parameters["rowFilter.Reply.feedId"];
          userId?: parameters["rowFilter.Reply.userId"];
        };
        body: {
          /** Reply */
          Reply?: definitions["Reply"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Topic": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Topic.id"];
          name?: parameters["rowFilter.Topic.name"];
          iconUrl?: parameters["rowFilter.Topic.iconUrl"];
          communityId?: parameters["rowFilter.Topic.communityId"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Topic"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Topic */
          Topic?: definitions["Topic"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Topic.id"];
          name?: parameters["rowFilter.Topic.name"];
          iconUrl?: parameters["rowFilter.Topic.iconUrl"];
          communityId?: parameters["rowFilter.Topic.communityId"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Topic.id"];
          name?: parameters["rowFilter.Topic.name"];
          iconUrl?: parameters["rowFilter.Topic.iconUrl"];
          communityId?: parameters["rowFilter.Topic.communityId"];
        };
        body: {
          /** Topic */
          Topic?: definitions["Topic"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/User": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.User.id"];
          aud?: parameters["rowFilter.User.aud"];
          confirmation_sent_at?: parameters["rowFilter.User.confirmation_sent_at"];
          recovery_sent_at?: parameters["rowFilter.User.recovery_sent_at"];
          email?: parameters["rowFilter.User.email"];
          phone?: parameters["rowFilter.User.phone"];
          avatarUrl?: parameters["rowFilter.User.avatarUrl"];
          avatarUrlThumb?: parameters["rowFilter.User.avatarUrlThumb"];
          created_at?: parameters["rowFilter.User.created_at"];
          updated_at?: parameters["rowFilter.User.updated_at"];
          confirmed_at?: parameters["rowFilter.User.confirmed_at"];
          email_confirmed_at?: parameters["rowFilter.User.email_confirmed_at"];
          phone_confirmed_at?: parameters["rowFilter.User.phone_confirmed_at"];
          last_sign_in_at?: parameters["rowFilter.User.last_sign_in_at"];
          role?: parameters["rowFilter.User.role"];
          displayName?: parameters["rowFilter.User.displayName"];
          name?: parameters["rowFilter.User.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["User"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** User */
          User?: definitions["User"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.User.id"];
          aud?: parameters["rowFilter.User.aud"];
          confirmation_sent_at?: parameters["rowFilter.User.confirmation_sent_at"];
          recovery_sent_at?: parameters["rowFilter.User.recovery_sent_at"];
          email?: parameters["rowFilter.User.email"];
          phone?: parameters["rowFilter.User.phone"];
          avatarUrl?: parameters["rowFilter.User.avatarUrl"];
          avatarUrlThumb?: parameters["rowFilter.User.avatarUrlThumb"];
          created_at?: parameters["rowFilter.User.created_at"];
          updated_at?: parameters["rowFilter.User.updated_at"];
          confirmed_at?: parameters["rowFilter.User.confirmed_at"];
          email_confirmed_at?: parameters["rowFilter.User.email_confirmed_at"];
          phone_confirmed_at?: parameters["rowFilter.User.phone_confirmed_at"];
          last_sign_in_at?: parameters["rowFilter.User.last_sign_in_at"];
          role?: parameters["rowFilter.User.role"];
          displayName?: parameters["rowFilter.User.displayName"];
          name?: parameters["rowFilter.User.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.User.id"];
          aud?: parameters["rowFilter.User.aud"];
          confirmation_sent_at?: parameters["rowFilter.User.confirmation_sent_at"];
          recovery_sent_at?: parameters["rowFilter.User.recovery_sent_at"];
          email?: parameters["rowFilter.User.email"];
          phone?: parameters["rowFilter.User.phone"];
          avatarUrl?: parameters["rowFilter.User.avatarUrl"];
          avatarUrlThumb?: parameters["rowFilter.User.avatarUrlThumb"];
          created_at?: parameters["rowFilter.User.created_at"];
          updated_at?: parameters["rowFilter.User.updated_at"];
          confirmed_at?: parameters["rowFilter.User.confirmed_at"];
          email_confirmed_at?: parameters["rowFilter.User.email_confirmed_at"];
          phone_confirmed_at?: parameters["rowFilter.User.phone_confirmed_at"];
          last_sign_in_at?: parameters["rowFilter.User.last_sign_in_at"];
          role?: parameters["rowFilter.User.role"];
          displayName?: parameters["rowFilter.User.displayName"];
          name?: parameters["rowFilter.User.name"];
        };
        body: {
          /** User */
          User?: definitions["User"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/_CategoryToFeed": {
    get: {
      parameters: {
        query: {
          A?: parameters["rowFilter._CategoryToFeed.A"];
          B?: parameters["rowFilter._CategoryToFeed.B"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["_CategoryToFeed"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** _CategoryToFeed */
          _CategoryToFeed?: definitions["_CategoryToFeed"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          A?: parameters["rowFilter._CategoryToFeed.A"];
          B?: parameters["rowFilter._CategoryToFeed.B"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          A?: parameters["rowFilter._CategoryToFeed.A"];
          B?: parameters["rowFilter._CategoryToFeed.B"];
        };
        body: {
          /** _CategoryToFeed */
          _CategoryToFeed?: definitions["_CategoryToFeed"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  Category: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    color: string;
    name: string;
    iconUrl?: string;
    description?: string;
    createdAt?: string;
    updatedAt?: string;
    /**
     * Note:
     * This is a Foreign Key to `Community.id`.<fk table='Community' column='id'/>
     */
    communityId: string;
  };
  Community: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    isPublic?: boolean;
    name: string;
    description: string;
    currency: string;
    color?: string;
    createdAt: string;
    updatedAt?: string;
    deletedAt?: string;
    imageURL?: string;
    thumbURL?: string;
  };
  CreditCard: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    cardNumber?: string;
    validDateMonth?: string;
    validDateYear?: string;
    twoLetterPassword?: string;
    registrationNumber?: string;
    description?: string;
    cvv?: string;
    cardType?: "amex" | "master" | "visa" | "discover";
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    /**
     * Note:
     * This is a Foreign Key to `Community.id`.<fk table='Community' column='id'/>
     */
    communityId: string;
  };
  Deposit: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    depositType: "sponsoring" | "deposit";
    paymentType: "onetime" | "subscription";
    title: string;
    description?: string;
    price: number;
    localizedPrice: string;
    currency: string;
    subscriptionPeriodUnit?: "day" | "week" | "month" | "year";
    subscriptionPeriod?: number;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    /**
     * Note:
     * This is a Foreign Key to `User.id`.<fk table='User' column='id'/>
     */
    userId?: string;
    /**
     * Note:
     * This is a Foreign Key to `Community.id`.<fk table='Community' column='id'/>
     */
    communityId?: string;
    /**
     * Note:
     * This is a Foreign Key to `Topic.id`.<fk table='Topic' column='id'/>
     */
    topicId?: string;
  };
  Feed: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    isPublic: boolean;
    title: string;
    date?: string;
    price: number;
    localizedPrice?: string;
    latitude?: number;
    longitude?: number;
    createdAt?: string;
    updatedAt?: string;
    deletedAt?: string;
    /**
     * Note:
     * This is a Foreign Key to `Community.id`.<fk table='Community' column='id'/>
     */
    communityId: string;
    /**
     * Note:
     * This is a Foreign Key to `User.id`.<fk table='User' column='id'/>
     */
    userId: string;
    /**
     * Note:
     * This is a Foreign Key to `CreditCard.id`.<fk table='CreditCard' column='id'/>
     */
    creditCardId?: string;
  };
  Image: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    url: string;
    /**
     * Note:
     * This is a Foreign Key to `Community.id`.<fk table='Community' column='id'/>
     */
    communityId?: string;
    /**
     * Note:
     * This is a Foreign Key to `User.id`.<fk table='User' column='id'/>
     */
    userId?: string;
    /**
     * Note:
     * This is a Foreign Key to `Feed.id`.<fk table='Feed' column='id'/>
     */
    feedId?: string;
  };
  Permission: {
    type: "owner" | "admin" | "member";
    accepted?: boolean;
    createdAt: string;
    /**
     * Note:
     * This is a Foreign Key to `User.id`.<fk table='User' column='id'/>
     */
    userId: string;
    /**
     * Note:
     * This is a Foreign Key to `Community.id`.<fk table='Community' column='id'/>
     */
    communityId: string;
  };
  Reaction: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    emoji: string;
    /**
     * Note:
     * This is a Foreign Key to `Feed.id`.<fk table='Feed' column='id'/>
     */
    feedId?: string;
    /**
     * Note:
     * This is a Foreign Key to `Reply.id`.<fk table='Reply' column='id'/>
     */
    replyId?: string;
    /**
     * Note:
     * This is a Foreign Key to `User.id`.<fk table='User' column='id'/>
     */
    userId: string;
  };
  Reply: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    messageType: "text" | "photo" | "movie" | "file";
    photoURL?: string;
    movieURL?: string;
    fileURL?: string;
    text?: string;
    createdAt?: string;
    updatedAt?: string;
    /**
     * Note:
     * This is a Foreign Key to `Community.id`.<fk table='Community' column='id'/>
     */
    communityId?: string;
    /**
     * Note:
     * This is a Foreign Key to `Feed.id`.<fk table='Feed' column='id'/>
     */
    feedId?: string;
    /**
     * Note:
     * This is a Foreign Key to `User.id`.<fk table='User' column='id'/>
     */
    userId: string;
  };
  Topic: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    name: string;
    iconUrl?: string;
    /**
     * Note:
     * This is a Foreign Key to `Community.id`.<fk table='Community' column='id'/>
     */
    communityId: string;
  };
  User: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    aud: string;
    confirmation_sent_at?: string;
    recovery_sent_at?: string;
    email?: string;
    phone?: string;
    avatarUrl?: string;
    avatarUrlThumb?: string;
    created_at: string;
    updated_at?: string;
    confirmed_at?: string;
    email_confirmed_at?: string;
    phone_confirmed_at?: string;
    last_sign_in_at?: string;
    role?: string;
    displayName?: string;
    name?: string;
  };
  _CategoryToFeed: {
    /**
     * Note:
     * This is a Foreign Key to `Category.id`.<fk table='Category' column='id'/>
     */
    A: string;
    /**
     * Note:
     * This is a Foreign Key to `Feed.id`.<fk table='Feed' column='id'/>
     */
    B: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** Category */
  "body.Category": definitions["Category"];
  "rowFilter.Category.id": string;
  "rowFilter.Category.color": string;
  "rowFilter.Category.name": string;
  "rowFilter.Category.iconUrl": string;
  "rowFilter.Category.description": string;
  "rowFilter.Category.createdAt": string;
  "rowFilter.Category.updatedAt": string;
  "rowFilter.Category.communityId": string;
  /** Community */
  "body.Community": definitions["Community"];
  "rowFilter.Community.id": string;
  "rowFilter.Community.isPublic": string;
  "rowFilter.Community.name": string;
  "rowFilter.Community.description": string;
  "rowFilter.Community.currency": string;
  "rowFilter.Community.color": string;
  "rowFilter.Community.createdAt": string;
  "rowFilter.Community.updatedAt": string;
  "rowFilter.Community.deletedAt": string;
  "rowFilter.Community.imageURL": string;
  "rowFilter.Community.thumbURL": string;
  /** CreditCard */
  "body.CreditCard": definitions["CreditCard"];
  "rowFilter.CreditCard.id": string;
  "rowFilter.CreditCard.cardNumber": string;
  "rowFilter.CreditCard.validDateMonth": string;
  "rowFilter.CreditCard.validDateYear": string;
  "rowFilter.CreditCard.twoLetterPassword": string;
  "rowFilter.CreditCard.registrationNumber": string;
  "rowFilter.CreditCard.description": string;
  "rowFilter.CreditCard.cvv": string;
  "rowFilter.CreditCard.cardType": string;
  "rowFilter.CreditCard.createdAt": string;
  "rowFilter.CreditCard.updatedAt": string;
  "rowFilter.CreditCard.deletedAt": string;
  "rowFilter.CreditCard.communityId": string;
  /** Deposit */
  "body.Deposit": definitions["Deposit"];
  "rowFilter.Deposit.id": string;
  "rowFilter.Deposit.depositType": string;
  "rowFilter.Deposit.paymentType": string;
  "rowFilter.Deposit.title": string;
  "rowFilter.Deposit.description": string;
  "rowFilter.Deposit.price": string;
  "rowFilter.Deposit.localizedPrice": string;
  "rowFilter.Deposit.currency": string;
  "rowFilter.Deposit.subscriptionPeriodUnit": string;
  "rowFilter.Deposit.subscriptionPeriod": string;
  "rowFilter.Deposit.createdAt": string;
  "rowFilter.Deposit.updatedAt": string;
  "rowFilter.Deposit.deletedAt": string;
  "rowFilter.Deposit.userId": string;
  "rowFilter.Deposit.communityId": string;
  "rowFilter.Deposit.topicId": string;
  /** Feed */
  "body.Feed": definitions["Feed"];
  "rowFilter.Feed.id": string;
  "rowFilter.Feed.isPublic": string;
  "rowFilter.Feed.title": string;
  "rowFilter.Feed.date": string;
  "rowFilter.Feed.price": string;
  "rowFilter.Feed.localizedPrice": string;
  "rowFilter.Feed.latitude": string;
  "rowFilter.Feed.longitude": string;
  "rowFilter.Feed.createdAt": string;
  "rowFilter.Feed.updatedAt": string;
  "rowFilter.Feed.deletedAt": string;
  "rowFilter.Feed.communityId": string;
  "rowFilter.Feed.userId": string;
  "rowFilter.Feed.creditCardId": string;
  /** Image */
  "body.Image": definitions["Image"];
  "rowFilter.Image.id": string;
  "rowFilter.Image.url": string;
  "rowFilter.Image.communityId": string;
  "rowFilter.Image.userId": string;
  "rowFilter.Image.feedId": string;
  /** Permission */
  "body.Permission": definitions["Permission"];
  "rowFilter.Permission.type": string;
  "rowFilter.Permission.accepted": string;
  "rowFilter.Permission.createdAt": string;
  "rowFilter.Permission.userId": string;
  "rowFilter.Permission.communityId": string;
  /** Reaction */
  "body.Reaction": definitions["Reaction"];
  "rowFilter.Reaction.id": string;
  "rowFilter.Reaction.emoji": string;
  "rowFilter.Reaction.feedId": string;
  "rowFilter.Reaction.replyId": string;
  "rowFilter.Reaction.userId": string;
  /** Reply */
  "body.Reply": definitions["Reply"];
  "rowFilter.Reply.id": string;
  "rowFilter.Reply.messageType": string;
  "rowFilter.Reply.photoURL": string;
  "rowFilter.Reply.movieURL": string;
  "rowFilter.Reply.fileURL": string;
  "rowFilter.Reply.text": string;
  "rowFilter.Reply.createdAt": string;
  "rowFilter.Reply.updatedAt": string;
  "rowFilter.Reply.communityId": string;
  "rowFilter.Reply.feedId": string;
  "rowFilter.Reply.userId": string;
  /** Topic */
  "body.Topic": definitions["Topic"];
  "rowFilter.Topic.id": string;
  "rowFilter.Topic.name": string;
  "rowFilter.Topic.iconUrl": string;
  "rowFilter.Topic.communityId": string;
  /** User */
  "body.User": definitions["User"];
  "rowFilter.User.id": string;
  "rowFilter.User.aud": string;
  "rowFilter.User.confirmation_sent_at": string;
  "rowFilter.User.recovery_sent_at": string;
  "rowFilter.User.email": string;
  "rowFilter.User.phone": string;
  "rowFilter.User.avatarUrl": string;
  "rowFilter.User.avatarUrlThumb": string;
  "rowFilter.User.created_at": string;
  "rowFilter.User.updated_at": string;
  "rowFilter.User.confirmed_at": string;
  "rowFilter.User.email_confirmed_at": string;
  "rowFilter.User.phone_confirmed_at": string;
  "rowFilter.User.last_sign_in_at": string;
  "rowFilter.User.role": string;
  "rowFilter.User.displayName": string;
  "rowFilter.User.name": string;
  /** _CategoryToFeed */
  "body._CategoryToFeed": definitions["_CategoryToFeed"];
  "rowFilter._CategoryToFeed.A": string;
  "rowFilter._CategoryToFeed.B": string;
}

export interface operations {}

export interface external {}
